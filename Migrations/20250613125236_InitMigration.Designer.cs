// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd_kolos2.Database;

#nullable disable

namespace apbd_kolos2.Migrations
{
    [DbContext(typeof(MuseumDbContext))]
    [Migration("20250613125236_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apbd_kolos2.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            BirthDate = new DateTime(1881, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pablo",
                            LastName = "Picasso"
                        },
                        new
                        {
                            ArtistId = 2,
                            BirthDate = new DateTime(1907, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Frida",
                            LastName = "Kahlo"
                        });
                });

            modelBuilder.Entity("apbd_kolos2.Models.Artwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtworkId"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("YearCreated")
                        .HasColumnType("int");

                    b.HasKey("ArtworkId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Artwork", (string)null);

                    b.HasData(
                        new
                        {
                            ArtworkId = 1,
                            ArtistId = 1,
                            Title = "Guernica",
                            YearCreated = 1937
                        },
                        new
                        {
                            ArtworkId = 2,
                            ArtistId = 2,
                            Title = "The Two Fridas",
                            YearCreated = 1939
                        });
                });

            modelBuilder.Entity("apbd_kolos2.Models.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfArtworks")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExhibitionId");

                    b.HasIndex("GalleryId");

                    b.ToTable("Exhibition", (string)null);

                    b.HasData(
                        new
                        {
                            ExhibitionId = 1,
                            EndDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GalleryId = 1,
                            NumberOfArtworks = 2,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "20th Century Giants"
                        });
                });

            modelBuilder.Entity("apbd_kolos2.Models.ExhibitionArtwork", b =>
                {
                    b.Property<int>("ExhibitionId")
                        .HasColumnType("int");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int");

                    b.Property<double>("InsuranceValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.HasKey("ExhibitionId", "ArtworkId");

                    b.HasIndex("ArtworkId");

                    b.ToTable("ExhibitionArtwork", (string)null);

                    b.HasData(
                        new
                        {
                            ExhibitionId = 1,
                            ArtworkId = 1,
                            InsuranceValue = 1000000.0
                        },
                        new
                        {
                            ExhibitionId = 1,
                            ArtworkId = 2,
                            InsuranceValue = 800000.0
                        });
                });

            modelBuilder.Entity("apbd_kolos2.Models.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GalleryId"));

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GalleryId");

                    b.ToTable("Gallery", (string)null);

                    b.HasData(
                        new
                        {
                            GalleryId = 1,
                            EstablishedDate = new DateTime(2001, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Modern Art Space"
                        });
                });

            modelBuilder.Entity("apbd_kolos2.Models.Artwork", b =>
                {
                    b.HasOne("apbd_kolos2.Models.Artist", "Artist")
                        .WithMany("Artworks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("apbd_kolos2.Models.Exhibition", b =>
                {
                    b.HasOne("apbd_kolos2.Models.Gallery", "Gallery")
                        .WithMany("Exhibitions")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("apbd_kolos2.Models.ExhibitionArtwork", b =>
                {
                    b.HasOne("apbd_kolos2.Models.Artwork", "Artwork")
                        .WithMany("ExhibitionArtworks")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_kolos2.Models.Exhibition", "Exhibition")
                        .WithMany("ExhibitionArtworks")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("apbd_kolos2.Models.Artist", b =>
                {
                    b.Navigation("Artworks");
                });

            modelBuilder.Entity("apbd_kolos2.Models.Artwork", b =>
                {
                    b.Navigation("ExhibitionArtworks");
                });

            modelBuilder.Entity("apbd_kolos2.Models.Exhibition", b =>
                {
                    b.Navigation("ExhibitionArtworks");
                });

            modelBuilder.Entity("apbd_kolos2.Models.Gallery", b =>
                {
                    b.Navigation("Exhibitions");
                });
#pragma warning restore 612, 618
        }
    }
}
